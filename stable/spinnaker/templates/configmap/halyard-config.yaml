apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "fullname" . }}-halyard-config
  labels:
    app: {{ template "fullname" . }}
data:
  install.sh: |
    # Wait for the Hal daemon to be ready
    export DAEMON_ENDPOINT=http://{{ template "fullname" . }}-halyard:8064
    export HAL_COMMAND="hal --daemon-endpoint $DAEMON_ENDPOINT"
    until $HAL_COMMAND --ready; do sleep 10 ; done

    bash /opt/halyard/scripts/config.sh

    {{ if .Values.halyard.additionalConfig.enabled }}
    bash /opt/halyard/additional/{{ .Values.halyard.additionalConfig.configMapKey }}
    {{ end }}

    $HAL_COMMAND deploy apply
  clean.sh: |
    export HAL_COMMAND='hal --daemon-endpoint http://{{ template "fullname" . }}-halyard:8064'
    $HAL_COMMAND deploy clean -q
  config.sh: |
    # Spinnaker version
    $HAL_COMMAND config version edit --version {{ .Values.halyard.spinnakerVersion }}

    # Storage
    {{ if .Values.minio.enabled }}
    echo {{ .Values.minio.secretKey }} | $HAL_COMMAND config storage s3 edit --endpoint http://{{ .Release.Name }}-minio:9000 --access-key-id {{ .Values.minio.accessKey }} --secret-access-key --bucket {{ .Values.storageBucket }}
    $HAL_COMMAND config storage edit --type s3
    {{ end }}
    {{ if .Values.gcs.enabled }}
    $HAL_COMMAND config storage gcs edit --project {{ .Values.gcs.project }} --json-path /opt/gcs/key.json --bucket {{ .Values.storageBucket }}
    $HAL_COMMAND config storage edit --type gcs
    {{ end }}

    # Docker Registry
    $HAL_COMMAND config provider docker-registry enable
    {{- range $index, $registry := .Values.dockerRegistries }}
    
    $HAL_COMMAND config provider docker-registry account add {{ $registry.name }} --address {{ $registry.address }} \
        --repositories {{ range $index, $repository := $registry.repositories }}{{- $repository }},{{- end }}
    {{- end }}

    $HAL_COMMAND config provider kubernetes enable
    {{- range $index, $context := .Values.kubeConfig.contexts }}
    $HAL_COMMAND config provider kubernetes account add {{ $context }} --docker-registries dockerhub \
                --context {{ $context }} {{ if not $.Values.kubeConfig.enabled }}--service-account true{{ end }} \
                {{ if $.Values.kubeConfig.enabled }}--kubeconfig-file /opt/kube/{{ $.Values.kubeConfig.secretKey }}{{ end }} --omit-namespaces=kube-system,kube-public --provider-version v2
    {{- end }}
    $HAL_COMMAND config deploy edit --account-name {{ .Values.kubeConfig.deploymentContext }} --type distributed \
                           --location {{ .Release.Namespace }}
