apiVersion: v1
kind: Service
metadata:
  name: {{ template "fullname" . }}-halyard
  labels:
    app: {{ template "fullname" . }}
    component: halyard
spec:
  ports:
  - port: 8064
    name: daemon
  clusterIP: None
  selector:
    app: {{ template "fullname" . }}
    component: halyard
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "fullname" . }}-halyard
spec:
  serviceName: {{ template "fullname" . }}-halyard
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
      component: halyard
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        component: halyard
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      initContainers:
      - name: "create-halyard-local"
        image: {{ .Values.halyard.image.repository }}:{{ .Values.halyard.image.tag }}
        command:
        - bash
        - -c
        - "cp /opt/halyard/config/* /tmp/config && printf 'server.address: 0.0.0.0\n' > /tmp/config/halyard-local.yml"
        volumeMounts:
        - name: halyard-config
          mountPath: /tmp/config
        - name: halyard-home
          mountPath: /tmp/spinnaker
      volumes:
      {{- if .Values.kubeConfig.enabled }}
      - name: kube-config
        secret:
          secretName: {{ .Values.kubeConfig.secretName }}
      {{- end }}
      {{- if .Values.gcs.enabled }}
      - name: gcs-key
        secret:
          secretName: {{ template "fullname" . }}-gcs
      {{- end }}
      - name: halyard-config
        emptyDir: {}
      containers:
      - name: halyard
        image: {{ .Values.halyard.image.repository }}:{{ .Values.halyard.image.tag }}
        ports:
        - containerPort: 8064
          name: daemon
        volumeMounts:
        {{- if .Values.gcs.enabled }}
        - name: gcs-key
          mountPath: /opt/gcs
        {{- end }}
        {{- if .Values.kubeConfig.enabled }}
        - name: kube-config
          mountPath: /opt/kube
        {{- end }}
        - name: halyard-home
          mountPath: /home/spinnaker
        - name: halyard-config
          mountPath: /opt/halyard/config
  volumeClaimTemplates:
  - metadata:
      name: halyard-home
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
